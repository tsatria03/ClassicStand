#pragma embed "data/assets.clm"
#include"bgt_compat.nvgt"
#include"instance.nvgt"
#include"sound_pool.nvgt"
#include"includes/dlg.nvgt"
#include"includes/form.nvgt"
#include"includes/form_menu.nvgt"
#include"includes/speech.nvgt"
#include"includes/virtual_dialogs.nvgt"
double cash=50, fullcups=0, pitcherstat=0, level=1, cups=0, lemons=0, salts=0, sugars=0, waters=0, cupcost=1, lemoncost=2, saltcost=3, sugarcost=4, watercost=5;
int day=1, pitcher=0, clocktime=12, temprature=60;
instance gamstence("cst");
menu m;
virtual_dialogs vd;
sound_pool pool, temp;
void main()
{
set_sound_storage("*");
set_sound_decryption_key("Y3KuIRoUehwlqoQwzdAYtchD0ZGd7Far84PGFhaISYDy41EaPFJ2fCfmCqOyIjWEVuI9OrGc6O8snpWfzxKZHL3VJNpubYBGEdN4CIAPbweVgL2pugjK79Kthps1bK8N47qkMslu5KZqjNkATIUik4b7u0xJBpgMzBTlAKc1nFv2bGHDaY2N0zcdw8YKkMeBknxiur",true);
show_window("ClassicStand, version 1.0.");
if(gamstence.is_already_running)
{
alert("error", "You can only have one instence of this game running!");
exit();
}
else
{
wait(500);
cash=random(20, 200);
    clocktime = random(1, 12);
    temprature = random(20, 120);
game();
}
}
void game()
{
while(true)
{
wait(5);
setupmenu();
m.add_item("day"+day);
m.add_item("level"+level);
m.add_item("Time: "+clocktime+" aclock.");
m.add_item("Temprature, "+temprature+" degrees farenheight.");
m.add_item("Cash: " + cash + " dollar" + (cash == 1 ? "" : "s."));
m.add_item("filled cups: " + fullcups);
if(pitcherstat <= 0)
    m.add_item("Pitcher: 0 liters of lemonade.");
else if(pitcherstat <= 1)
    m.add_item("Pitcher: 1 liter of lemonade.");
else
    m.add_item("Pitcher: " + ceil(pitcherstat) + " liters of lemonade.");
m.add_item("Buy cup. You have " + cups + " cup" + (cups == 1 ? "" : "s"), "cps");
m.add_item("Buy lemon. You have " + lemons + " lemon" + (lemons == 1 ? "" : "s"), "lms");
m.add_item("Buy salt. You have " + salts + " packet" + (salts == 1 ? "" : "s") + " of salt", "slt");
m.add_item("Buy sugar. You have " + sugars + " packet" + (sugars == 1 ? "" : "s") + " of sugar", "sgr");
m.add_item("Buy water. You have " + waters + " liter" + (waters == 1 ? "" : "s") + " of water", "swr");
m.add_item("make lemonaid", "mlm");
m.add_item("pour lemonaid", "plm");
m.add_item("sell lemonaid", "slm");
m.intro_text="Lemonaid manager. What would you like to do?";
int mres=m.run();
string main = m.get_selected_item_id();
if(mres==-1)
{
speak("thanks for playing");
exit();
}
if(main == "cps")
{
vd.set_disallowed_chars("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ !@#$%^&*()[]{};:'\"\\|,.<>?/+-=`~", false, "");
    string cup = vd.input_box("", "How many cups would you like to buy? Each one costs " + cupcost + " dollar" + (cupcost == 1 ? "" : "s."));
    if(cup == "")
        game();
    double qty = string_to_number(cup);
    double total = qty * cupcost;
    if(qty <= 0)
        game();
    if(cash < total)
    {
        dlg("Error. You don't have enough cash to purchase " + qty + " cup" + (qty == 1 ? "" : "s") + ".");
        game();
    }
    cups += qty;
    cash -= total;
    pool.play_stationary("buy" + random(1, 4) + ".ogg", false);
    dlg("Purchase complete. You bought " + qty + " cup" + (qty == 1 ? "" : "s") + ".");
}
if(main == "lms")
{
vd.set_disallowed_chars("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ !@#$%^&*()[]{};:'\"\\|,.<>?/+-=`~", false, "");
string lemon = vd.input_box("", "How many lemons would you like to buy? Each one costs " + lemoncost + " dollar" + (lemoncost == 1 ? "" : "s."));
    if(lemon == "")
        game();
    double qty = string_to_number(lemon);
    double total = qty * lemoncost;
    if(qty <= 0)
        game();
    if(cash < total)
    {
        dlg("Error. You don't have enough cash to purchase " + qty + " lemon" + (qty == 1 ? "" : "s") + ".");
        game();
    }
    lemons += qty;
    cash -= total;
    pool.play_stationary("buy" + random(1, 4) + ".ogg", false);
    dlg("Purchase complete. You bought " + qty + " lemon" + (qty == 1 ? "" : "s") + ".");
}
if(main == "slt")
{
vd.set_disallowed_chars("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ !@#$%^&*()[]{};:'\"\\|,.<>?/+-=`~", false, "");
string salt = vd.input_box("", "How many salt packets would you like to buy? Each one costs " + saltcost + " dollar" + (saltcost == 1 ? "" : "s."));
    if(salt == "")
        game();
    double qty = string_to_number(salt);
    double total = qty * saltcost;
    if(qty <= 0)
        game();
    if(cash < total)
    {
        dlg("Error. You don't have enough cash to purchase " + qty + " packet" + (qty == 1 ? "" : "s") + " of salt.");
        game();
    }
    salts += qty;
    cash -= total;
    pool.play_stationary("buy" + random(1, 4) + ".ogg", false);
    dlg("Purchase complete. You bought " + qty + " packet" + (qty == 1 ? "" : "s") + " of salt.");
}
if(main == "sgr")
{
vd.set_disallowed_chars("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ !@#$%^&*()[]{};:'\"\\|,.<>?/+-=`~", false, "");
string sugar = vd.input_box("", "How many sugar packets would you like to buy? Each one costs " + sugarcost + " dollar" + (sugarcost == 1 ? "" : "s."));
    if(sugar == "")
        game();
    double qty = string_to_number(sugar);
    double total = qty * sugarcost;
    if(qty <= 0)
        game();
    if(cash < total)
    {
        dlg("Error. You don't have enough cash to purchase " + qty + " packet" + (qty == 1 ? "" : "s") + " of sugar.");
        game();
    }
    sugars += qty;
    cash -= total;
    pool.play_stationary("buy" + random(1, 4) + ".ogg", false);
    dlg("Purchase complete. You bought " + qty + " packet" + (qty == 1 ? "" : "s") + " of sugar.");
}
if(main == "swr")
{
vd.set_disallowed_chars("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ !@#$%^&*()[]{};:'\"\\|,.<>?/+-=`~", false, "");
string water = vd.input_box("", "How many liters of water would you like to buy? Each one costs " + watercost + " dollar" + (watercost == 1 ? "" : "s."));
    if(water == "")
        game();
    double qty = string_to_number(water);
    double total = qty * watercost;
    if(qty <= 0)
        game();
    if(cash < total)
    {
        dlg("Error. You don't have enough cash to purchase " + qty + " liter" + (qty == 1 ? "" : "s") + " of water.");
        game();
    }
    waters += qty;
    cash -= total;
    pool.play_stationary("buy" + random(1, 4) + ".ogg", false);
    dlg("Purchase complete. You bought " + qty + " liter" + (qty == 1 ? "" : "s") + " of water.");
}
if(main == "mlm")
{
    if(cups < 1 || lemons < 1 || sugars < 1 || salts < 1 || waters < 1)
    {
        dlg("Error. You need at least one of every ingredient and a cup to make lemonade.");
        game();
    }
vd.set_disallowed_chars("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ !@#$%^&*()[]{};:'\"\\|,.<>?/+-=`~", false, "");
    string input = vd.input_box("", "How many cups of lemonade would you like to make?");
    if(input == "") game();
    double cupcount = string_to_number(input);
    if(cupcount <= 0)
        game();
    if(cupcount > cups)
    {
        dlg("Error. You don't have enough cups. You only have " + cups + ".");
        game();
    }
    if(lemons < cupcount || sugars < cupcount || salts < cupcount || waters < cupcount)
    {
        dlg("Error. You don't have enough ingredients to make that much lemonade.");
        game();
    }
    cups -= cupcount;
    lemons -= cupcount;
    sugars -= cupcount;
    salts -= cupcount;
    waters -= cupcount;
    pitcher = 1;
    pitcherstat += cupcount * 0.25;
    pool.play_stationary("makestart.ogg", false);
dlgplay("makeloop.ogg");
pool.play_stationary("makestop.ogg", false);
    dlg("Success. You made " + cupcount + " cup" + (cupcount == 1 ? "" : "s") + " of lemonade and added it to the pitcher.");
}
if(main == "plm")
{
    if(pitcher < 1 || pitcherstat <= 0)
    {
        dlg("Error. The pitcher is currently empty. Please make some lemonade to pour into a cup.");
        game();
    }
    double maxcups = floor(pitcherstat / 0.25);
    if(maxcups < 1)
    {
        dlg("Error. The pitcher doesn't have enough lemonade to pour a single cup.");
        game();
    }
vd.set_disallowed_chars("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ !@#$%^&*()[]{};:'\"\\|,.<>?/+-=`~", false, "");
    string input = vd.input_box("", "How many cups would you like to pour from the pitcher? You can pour up to " + maxcups + ".");
    if(input == "") game();
    double pourcount = string_to_number(input);
    if(pourcount <= 0) game();
    if(pourcount > maxcups)
    {
        dlg("Error. You can't pour more than " + maxcups + " cup" + (maxcups == 1 ? "" : "s") + ".");
        game();
    }
    pitcherstat -= pourcount * 0.25;
    fullcups += pourcount;
    if(pitcherstat <= 0)
    {
        pitcherstat = 0;
        pitcher = 0;
    }
pool.play_stationary("pourcup.ogg", false);
    dlg("Success. You poured " + pourcount + " cup" + (pourcount == 1 ? "" : "s") + " of lemonade into sellable serving cups.");
}
if(main == "slm")
{
    if(fullcups <= 0)
    {
        dlg("Error. You need at least one cup of lemonade made in order to sell it for cash.");
game();
    }
vd.set_disallowed_chars("abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ !@#$%^&*()[]{};:'\"\\|,.<>?/+-=`~", false, "");
    string price = vd.input_box("", "What price would you like to sell each cup of lemonade for?");
    if(price == "")
        game();
    double percup = string_to_number(price);
    if(percup <= 0)
    {
        dlg("Error. Invalid price entered.");
        game();
    }
    double total = percup * fullcups;
    cash += total;
    pool.play_stationary("buy" + random(1, 4) + ".ogg", false);
    dlg("Congratulations! You've earned " + total + " dollar" + (total == 1 ? "" : "s") + " for selling " + fullcups + " cup" + (fullcups == 1 ? "" : "s") + " of lemonade.");
    fullcups = 0;
    level += 1;
    clocktime = random(1, 12);
    temprature = random(20, 120);
    day = level;
    cupcost = 1 * level;
    lemoncost = 2 * level;
    saltcost = 3 * level;
    sugarcost = 4 * level;
    watercost = 5 * level;
}
if(main=="ex")
{
speak("thanks for playing");
exit();
}
}
}
